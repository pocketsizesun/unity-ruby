#!/usr/bin/env ruby

require 'bundler/setup'
require 'optparse'
require 'unity'
require 'unity/cli'

orig_args = ARGV.dup
command = ARGV.shift

case command
when 'console', 'c'
  ENV['UNITY_CONSOLE'] = '1'
  require_relative "#{Dir.pwd}/config/boot.rb"
  require 'pry'

  def reload!
    exec '/usr/bin/env', 'bundle', 'exec', 'unity', 'console'
  end

  Pry.start
when 'runner', 'r'
  require_relative "#{Dir.pwd}/config/boot.rb"

  load ARGV.shift
when 'server', 's'
  options = { reload: false }
  OptionParser.new do |opts|
    opts.on('-r', '--reload', 'Auto-reload when file changes') do
      options[:reload] = true
    end
  end.parse!

  if options[:reload] == true
    exec '/usr/bin/env', 'bundle', 'exec', 'rerun', 'bundle exec puma'
  else
    exec '/usr/bin/env', 'bundle', 'exec', 'puma'
  end
when 'app:check'
  require_relative "#{Dir.pwd}/config/boot.rb"

  Unity.logger.info(
    'message' => '[app:check] succeeded!',
    'operations_count' => Unity.application.operations.length,
    'event_handlers_count' => Unity.application.event_handlers.length,
    'policies_count' => Unity.application.policies.length
  )

  exit 0
else
  exec '/usr/bin/env', 'bundle', 'exec', 'rake', *orig_args
end
